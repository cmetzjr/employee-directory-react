{"version":3,"sources":["utils/API.js","components/EmpContainer.js","App.js","index.js"],"names":["axios","get","EmpContainer","state","employees","empFiltered","order","getEmployees","a","API","res","empInfo","data","results","map","emp","pic","picture","thumbnail","last","name","first","phone","email","id","value","setState","console","log","handleInputChange","filter","x","includes","empSortedByLastName","sort","b","empA","toUpperCase","empB","this","className","htmlFor","type","onInput","event","target","scope","onClick","src","alt","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAMe,EACA,kBAAKA,IAAMC,IALV,iDCiIDC,E,4MA9HXC,MAAQ,CACJC,UAAW,GACXC,YAAa,GACbC,MAAO,U,EAKXC,a,sBAAe,8BAAAC,EAAA,+EAEWC,IAFX,OAEDC,EAFC,OAGDC,EAAUD,EAAIE,KAAKC,QAAQC,KAAI,SAAAC,GAAG,MAAG,CACvCC,IAAKD,EAAIE,QAAQC,UACjBC,KAAMJ,EAAIK,KAAKD,KACfE,MAAON,EAAIK,KAAKC,MAChBC,MAAOP,EAAIO,MACXC,MAAOR,EAAIQ,MACXC,GAAIT,EAAIS,GAAGC,UAEf,EAAKC,SAAS,CAAEtB,UAAWO,EAASN,YAAaM,IAX1C,gDAaPgB,QAAQC,IAAR,MAbO,iE,EAwBfC,kBAAoB,SAACJ,GACjB,EAAKC,SAAS,CACVrB,YAAa,EAAKF,MAAMC,UAAU0B,QAAO,SAAAC,GAAC,OAAIA,EAAEZ,KAAKa,SAASP,S,EAKtEQ,oBAAsB,WAGlB,OAFAN,QAAQC,IAAI,YAEa,WAArB,EAAKzB,MAAMG,OAEX,EAAKoB,SAAS,CACVrB,YAAa,EAAKF,MAAMC,UAAU8B,MAAK,SAAC1B,EAAG2B,GACvCR,QAAQC,IAAIpB,EAAEW,KAAM,UAAWgB,EAAEhB,KAAM,WACvC,IAAIiB,EAAO5B,EAAEW,KAAKkB,cACdC,EAAOH,EAAEhB,KAAKkB,cAClB,OAAID,EAAOE,GACC,EAERF,EAAOE,EACA,EAEJ,OAGR,EAAKZ,SAAS,CACjBpB,MAAO,cAIf,EAAKoB,SAAS,CACVrB,YAAa,EAAKF,MAAMC,UAAU8B,MAAK,SAAC1B,EAAG2B,GACvCR,QAAQC,IAAIpB,EAAEW,KAAM,UAAWgB,EAAEhB,KAAM,WACvC,IAAIiB,EAAO5B,EAAEW,KAAKkB,cACdC,EAAOH,EAAEhB,KAAKkB,cAClB,OAAID,EAAOE,EACA,EAEPF,EAAOE,GACC,EAEL,OAGR,EAAKZ,SAAS,CACjBpB,MAAO,a,kEAlDXiC,KAAKhC,iB,+BA0DC,IAAD,OAEL,OACI,gCACI,sBAAKiC,UAAU,OAAf,UACI,oBAAIA,UAAU,mBAAd,gCACA,uBAAOA,UAAU,OAAOC,QAAQ,OAAhC,oDAEA,uBAAOC,KAAK,OAAOC,QAAS,SAAAC,GAAK,OAAI,EAAKf,kBAAkBe,EAAMC,OAAOpB,aAGjF,wBAAOe,UAAU,iBAAjB,UACI,uBAAOA,UAAU,cAAjB,SACI,+BACI,oBAAIM,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAMC,QAAS,kBAAM,EAAKd,uBAApC,UAA2D,sBAAMO,UAAU,QAAhB,2BAA4C,uBAAvG,eACA,oBAAIM,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,wBAGR,gCAEKP,KAAKpC,MAAME,YAAYS,KAAI,SAAAH,GAAO,OACnC,+BACI,6BAAI,qBAAKqC,IAAKrC,EAAQK,IAAKiC,IAAI,wBAC/B,6BAAKtC,EAAQQ,OACb,6BAAKR,EAAQU,QACb,6BAAKV,EAAQW,QACb,6BAAKX,EAAQY,UALRZ,EAAQa,mB,GAhHV0B,aCUZC,MAVf,WAGE,OACE,8BACE,cAAC,EAAD,OCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4ba1e9a8.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASEURL = \"https://randomuser.me/api/?results=75&nat=us\";\r\n\r\n\r\n// get dummy employees\r\nexport default {\r\n  getDummyEmp: ()=> axios.get(BASEURL)\r\n};","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\n\r\nclass EmpContainer extends Component {\r\n    //set initial state for 3 arrays\r\n    state = {\r\n        employees: [],\r\n        empFiltered: [],\r\n        order: \"ascend\"\r\n    };\r\n\r\n    \r\n    //API call for random user data, map the employee data that I want, and set state for both arrays\r\n    getEmployees = async () => {\r\n        try {\r\n            const res = await API.getDummyEmp();\r\n            const empInfo = res.data.results.map(emp=>({\r\n                pic: emp.picture.thumbnail,\r\n                last: emp.name.last,\r\n                first: emp.name.first,\r\n                phone: emp.phone,\r\n                email: emp.email,\r\n                id: emp.id.value                 \r\n            }))\r\n            this.setState({ employees: empInfo, empFiltered: empInfo })\r\n        } catch (err){\r\n            console.log(err)\r\n        };\r\n    };\r\n\r\n    \r\n    //call getEmployees\r\n    componentDidMount() {\r\n        this.getEmployees();\r\n    };\r\n\r\n    //this function will take the search parameters and will update the state of the empFiltered array based on filtering of the employees array\r\n    handleInputChange = (value) => {\r\n        this.setState({\r\n            empFiltered: this.state.employees.filter(x => x.last.includes(value))\r\n        });\r\n    };\r\n\r\n    //sort by last name\r\n    empSortedByLastName = () => {\r\n        console.log(\"run here\")\r\n\r\n        if (this.state.order === \"ascend\") {\r\n\r\n            this.setState({\r\n                empFiltered: this.state.employees.sort((a, b) => {\r\n                    console.log(a.last, \"a value\", b.last, \"b value\")\r\n                    var empA = a.last.toUpperCase();\r\n                    var empB = b.last.toUpperCase();\r\n                    if (empA < empB) {\r\n                        return -1;\r\n                    }\r\n                    if (empA > empB) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                })\r\n            });\r\n            return this.setState({\r\n                order: \"descend\"\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            empFiltered: this.state.employees.sort((a, b) => {\r\n                console.log(a.last, \"a value\", b.last, \"b value\")\r\n                var empA = a.last.toUpperCase();\r\n                var empB = b.last.toUpperCase();\r\n                if (empA < empB) {\r\n                    return 1;\r\n                }\r\n                if (empA > empB) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })\r\n        });\r\n        return this.setState({\r\n            order: \"ascend\"\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n       \r\n        return (            \r\n            <div>\r\n                <div className=\"mb-4\">\r\n                    <h1 className=\"text-center mb-4\">Employee Directory</h1>\r\n                    <label className=\"mr-4\" htmlFor=\"text\">Search for employees (case sensitive):</label>\r\n                    {/* letters typed into the input box (value) become the parameter of handleInputChange */}\r\n                    <input type=\"text\" onInput={event => this.handleInputChange(event.target.value)} />\r\n                </div>\r\n            \r\n            <table className=\"table table-sm\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">Photo</th>\r\n                        <th scope=\"col\" onClick={() => this.empSortedByLastName()}><span className=\"small\">Click to Sort</span><br />Last Name</th>\r\n                        <th scope=\"col\">First Name</th>\r\n                        <th scope=\"col\">Phone</th>\r\n                        <th scope=\"col\">Email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/* maps the empFiltered array and renders it to the table */}\r\n                    {this.state.empFiltered.map(empInfo=>\r\n                    <tr key={empInfo.id}>                            \r\n                        <td><img src={empInfo.pic} alt=\"employee headshot\"></img></td>\r\n                        <td>{empInfo.last}</td>\r\n                        <td>{empInfo.first}</td>\r\n                        <td>{empInfo.phone}</td>\r\n                        <td>{empInfo.email}</td>\r\n                    </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n        )\r\n            \r\n    };\r\n}\r\n\r\nexport default EmpContainer;","import React from \"react\";\nimport EmpContainer from \"./components/EmpContainer\";\n\nfunction App() {\n\n\n  return (\n    <div>      \n      <EmpContainer />\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}